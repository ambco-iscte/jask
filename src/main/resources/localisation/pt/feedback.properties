# ================= #
# Dynamic Questions #
# ================= #
HowDeepCallStack_DistractorNumFunctionCalls = Este é o número total de chamadas de função! A pilha de chamadas trata das chamadas a funções aninhadas.
HowDeepCallStack_Correct = A profundidade máxima da pilha de chamadas é atingida pela sequência de chamadas de funções aninhadas: %s.

HowManyArrayAllocations_DistractorTotalLength = Este é o comprimento total dos vetores alocados, não o seu número!
HowManyArrayAllocations_DistractorArrayParams = Este é o número de parâmetros de tipo vetor que a função %s recebe, não o número de vetores alocados dentro da função!
HowManyArrayAllocations_Correct = Os vetores alocados foram: %s.

HowManyArrayReads_DistractorNumAllocated = Este é o número de vetores alocados: %s.
HowManyArrayReads_DistractorWrites = Este é o número de escritas em vetores. Quando tens %s, estás a escrever %s no vetor %s na posição $s.
HowManyArrayReads_DistractorLengthAccesses = Este é o número de vezes que o %s de um vetor é acedido. Isto não lê nenhuma posição do vetor!
HowManyArrayReads_DistractorLengthOfAllocated = Este é o comprimento total de todos os vetores alocados!
HowManyArrayReads_Correct = Leste a posição %s do vetor %s usando %s. Neste caso, as leituras de vetores foram: %s.

HowManyArrayWrites_DistractorNumAllocated = Este é o número de vetores alocados: %s.
HowManyArrayWrites_DistractorReads = Este é o número de leituras de vetores. quando tens %s, estás a escrever %s no vetor %s na posição %s.
HowManyArrayWrites_DistractorLengthAccesses = Este é o número de vezes que o %s de um vetor é acedido. Isto não escreve em nenhuma posição do vetor!
HowManyArrayWrites_DistractorLengthOfAllocated = Este é o comprimento total de todos os vetores alocados!
HowManyArrayWrites_Correct = Escreves %s num vetor %s na posição %s usando %s. Neste caso, as escritas a vetores foram: %s.

HowManyFunctionCalls_DistractorWrongProcedure = Este é o número de chamadas a %s, não a %s.
HowManyFunctionCalls_DistractorTotalAllProcedures = Este é o número total de chamadas (a todas as funções), não apenas às chamadas a %s!

HowManyLoopIterations_DistractorOneMore = Após a última iteração, a condição %s ainda será avaliada (para %s), mas o corpo do ciclo não será executado, por isso não conta como uma iteração.

HowManyVariableAssignments_Correct = Uma atribuição a uma variável %s é uma instrução como %s.
HowManyVariableAssignments_DistractorWrongVariable = Este é o número de atribuições a %s, não a %s.

WhatArraySize_DistractorParameter = Este é o comprimento do argumento %s. Os argumentos não contam como sendo alocados dentro da função!
WhatArraySize_NoneOfTheAboveCorrect = Pergunta de rasteira: a função não aloca nenhum vetor!

WhatIsResult_DistractorReturnExpression = O resultado da chamada da função será um valor do tipo %s. %s é apenas um pedaço de código!
WhatIsResult_DistractorLastVariableValue = Este é o último valor da variável %s, mas não é o que é devolvido pela chamada da função.

WhichReturnExecuted_DistractorRightProcedureWrongStmt = Esta instrução é um possível retorno de %s, mas não é o que executa quando se chama %s.
WhichReturnExecuted_DistractorWrongProcedure = Esta instrução de retorno pertence à função %s, não a %s!

WhichVariableValues_DistractorWrongVariable = Estes são os valores tomados pela variável %s, não por %s.


# ==================== #
# Structural Questions #
# ==================== #
HowManyLoops_DistractorBranches = Este é o número de instruções de seleção (%s) na função %s, não de ciclos!
HowManyLoops_DistractorBranchesAnonCall = Este é o número de instruções de seleção (%s) no código, não de ciclos!
HowManyLoops_DistractorDistinctLoops = Este é o número de tipos de ciclos distintos (%s) presentes na função %s. Quantos de cada um existem no total?
HowManyLoops_DistractorDistinctLoopsAnonCall = Este é o número de tipos de ciclos distintos (%s) presentes no código. Quantos de cada um existem no total?
HowManyLoops_DistractorGuardCondition = Esta questão pergunta quantos ciclos estão no código, não quantas iterações aconteceriam se o código fosse executado!

HowManyParams_DistractorLocalVars = Este é o número de variáveis locais da função, não dos seus parâmetros. Os parâmetros são os valores que a função recebe como input.
HowManyParams_ZeroCorrect = Os parâmetros de uma função são escritos entre parênteses a seguir ao nome da função. Neste caso, a função %s não tem nenhum!
HowManyParams_Correct = Os parâmetros de uma função são escritos entre parênteses a seguir ao nome da função. Neste caso, a função %s tem os parâmetros %s.

HowManyVariables_ZeroCorrect = Variáveis locais são variáveis declaradas dentro da função. Neste caso, não há nenhuma!
HowManyVariables_Correct = Variáveis locais são variáveis declaradas dentro da função %s. Neste caso, temos: %s.
HowManyVariables_DistractorParameters = Estes são os parâmetros da função %s, que aparecem entre parênteses a seguir ao nome da função: %s. Estes não contam como variáveis locais!
HowManyVariables_DistractorParametersPlusVars = Este número inclui todas as variáveis locais, mas também os parâmetros da função %s. Os parâmetros não contam como variáveis locais!

IsRecursive_YesCorrect = A função %s é recursiva porque se chama a si própria: %s.
IsRecursive_NoIncorrect = Uma função é chamada "recursiva" se se chamar a si própria.
IsRecursive_NoCorrect = A função %s não se chama a si própria, portanto não é recursiva.
IsRecursive_YesIncorrect = Uma função é chamada "recursiva" se se chamar a si própria.

WhatVariables_DistractorLiterals = Valores escritos diretamente (sem serem guardados primeiro numa variável) chamam-se "literais" e não contam como variáveis.
WhatVariables_DistractorVarsAndLiterals = Todas as variáveis locais da função %s estão incluídas aqui, mas também alguns valores que não contam como variáveis.
WhatVariables_DistractorVarTypes = Estes são os tipos das variáveis, não os seus nomes!
WhatVariables_DistractorAllInScope = Todas as variáveis locais da função %s estão incluídas aqui, mas também algumas variáveis declaradas fora dela. Variáveis locais são as declaradas dentro da função.
WhatVariables_DistractorParams = Estes são os parâmetros da função %s. Estes não contam como variáveis locais! Variáveis locais são as declaradas dentro da função.
WhatVariables_DistractorMethodName = Este é o nome da função %s. Não é uma variável!
WhatVariables_DistractorMethodNameAndParams = Este é o nome da função %s, juntamente com os seus parâmetros. Estes não contam como variáveis locais! Variáveis locais são as declaradas dentro da função.
WhatVariables_DistractorNameAndAllInScope = Este é o nome da função %s, juntamente com todas as suas variáveis locais, mas também algumas declaradas fora da função. Variáveis locais são as declaradas dentro da função.
WhatVariables_DistractorNameAndVars = O nome da função não conta como variável.
WhatVariables_Correct = Uma variável é declarada usando, por exemplo, %s, e as variáveis locais de uma função são as declaradas dentro dela.
WhatVariables_CorrectAnonCall = Uma variável é declarada usando, por exemplo, %s.

WhichFixedVariables_DistractorParams = Estes são os parâmetros da função %s. Estes não contam como variáveis!
WhichFixedVariables_DistractorLiterals = Valores escritos diretamente (sem serem guardados primeiro numa variável) chamam-se "literais" e não contam como variáveis.
WhichFixedVariables_DistractorNotFixed = Estas são precisamente as variáveis que não são fixas! uma variável fixa é aquela cujo valor nunca muda após ser declarada. Aqui, por exemplo, a instrução %s muda o valor da variável %s, por isso não é fixa.
WhichFixedVariables_DistractorAllLocal = Todas as variáveis de valor fixo estão incluídas aqui, mas também algumas que não são fixas! uma variável fixa é aquela cujo valor nunca muda após ser declarada. Aqui, por exemplo, a instrução %s muda o valor da variável %s, e por isso ela não é fixa.
WhichFixedVariables_Correct = As variáveis %s são inicializadas, mas o seu valor nunca muda, e por isso são fixas.

WhichFunctionDependencies_DistractorControlStructures = Instruções como %s chamam-se "estruturas de controlo". Não contam como funções!
WhichFunctionDependencies_DistractorNamesAndControlStructures = Instruções como %s chamam-se "estruturas de controlo". Não contam como funções!
WhichFunctionDependencies_DistractorReturnStmts = Instruções de retorno (%s) terminam a execução de uma função, mas não contam como funções.
WhichFunctionDependencies_DistractorControlsAndReturns = Instruções como %s chamam-se "estruturas de controlo", e instruções de retorno (%s) terminam a execução de uma função. Nenhuma conta como função!
WhichFunctionDependencies_DistractorTypes = Tipos de dados não são funções!
WhichFunctionDependencies_DistractorModifiers = Modificadores (e.g. %s, %s) não são funções!
WhichFunctionDependencies_Correct = Uma função depende das outras funções que chama.

WhichParametersMultipleChoice_DistractorParamTypes = Este é o tipo de um parâmetro. Tal como quando declaras variáveis, escreves o nome a seguir ao tipo.
WhichParametersMultipleChoice_DistractorLocalVars = Esta é uma variável da função %s. Os parâmetros de uma função são escritos entre parênteses a seguir ao nome.
WhichParametersMultipleChoice_DistractorLocalVarTypes = Este é o tipo de uma variável da função %s. Os parâmetros de uma função são escritos entre parênteses a seguir ao nome.
WhichParametersMultipleChoice_NoneCorrect = Os parâmetros de uma função são escritos entre parênteses a seguir ao nome, então esta era rasteira: %s não tem parâmetros!

WhichParametersSingleChoice_DistractorParamAndName = Mas o nome de uma função não é um parâmetro!
WhichParametersSingleChoice_DistractorParamTypes = Estes são os tipos dos parâmetros. Tal como quando declaras variáveis, escreves o nome a seguir ao tipo.
WhichParametersSingleChoice_DistractorLocalVars = Estas são as variáveis da função %s, não os seus parâmetros. Os parâmetros de uma função são escritos entre parênteses a seguir ao nome.
WhichParametersSingleChoice_DistractorLocalVarTypes = Estes são os tipos das variáveis locais da função %s. Os parâmetros de uma função são escritos entre parênteses a seguir ao nome.
WhichParametersSingleChoice_NoneCorrect = Os parâmetros de uma função são escritos entre parênteses a seguir ao nome, então esta era rasteira: %s não tem parâmetros!

WhichParameterTypes_DistractorParameters = Estes são os parâmetros reais da função %s, não os seus tipos. Tal como quando declaras variáveis, escreves o nome a seguir ao tipo.
WhichParameterTypes_DistractorLocalVars = Estas são as variáveis da função %s, não os seus parâmetros. Os parâmetros de uma função são escritos entre parênteses a seguir ao nome.
WhichParameterTypes_DistractorLocalVarTypes = Estes são os tipos das variáveis da função %s, não dos seus parâmetros. Os parâmetros de uma função são escritos entre parênteses a seguir ao nome.
WhichParameterTypes_DistractorParamTypesAndReturnType = O tipo de retorno da função %s (%s) não conta como tipo de parâmetro.
WhichParameterTypes_NoneCorrect = Os parâmetros de uma função são escritos entre parênteses a seguir ao nome, então esta era rasteira: %s não tem parâmetros!

WhichReturnType_DistractorName = Este é o nome da função. Ele aparece sempre depois do tipo de retorno!
WhichReturnType_Correct = O tipo de retorno de uma função aparece sempre imediatamente antes do seu nome.
